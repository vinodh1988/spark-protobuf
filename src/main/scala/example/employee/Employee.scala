// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package example.employee

/** Represents an employee record
 */
@SerialVersionUID(0L)
final case class Employee(
                           id: _root_.scala.Predef.String = "",
                           name: _root_.scala.Predef.String = "",
                           department: _root_.scala.Predef.String = "",
                           salary: _root_.scala.Float = 0.0f,
                           unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
                         ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Employee] {
  @transient
  private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
  private[this] def __computeSerializedSize(): _root_.scala.Int = {
    var __size = 0

    {
      val __value = id
      if (!__value.isEmpty) {
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
      }
    };

    {
      val __value = name
      if (!__value.isEmpty) {
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      }
    };

    {
      val __value = department
      if (!__value.isEmpty) {
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      }
    };

    {
      val __value = salary
      if (__value != 0.0f) {
        __size += _root_.com.google.protobuf.CodedOutputStream.computeFloatSize(4, __value)
      }
    };
    __size += unknownFields.serializedSize
    __size
  }
  override def serializedSize: _root_.scala.Int = {
    var __size = __serializedSizeMemoized
    if (__size == 0) {
      __size = __computeSerializedSize() + 1
      __serializedSizeMemoized = __size
    }
    __size - 1

  }
  def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
    {
      val __v = id
      if (!__v.isEmpty) {
        _output__.writeString(1, __v)
      }
    };
    {
      val __v = name
      if (!__v.isEmpty) {
        _output__.writeString(2, __v)
      }
    };
    {
      val __v = department
      if (!__v.isEmpty) {
        _output__.writeString(3, __v)
      }
    };
    {
      val __v = salary
      if (__v != 0.0f) {
        _output__.writeFloat(4, __v)
      }
    };
    unknownFields.writeTo(_output__)
  }
  def withId(__v: _root_.scala.Predef.String): Employee = copy(id = __v)
  def withName(__v: _root_.scala.Predef.String): Employee = copy(name = __v)
  def withDepartment(__v: _root_.scala.Predef.String): Employee = copy(department = __v)
  def withSalary(__v: _root_.scala.Float): Employee = copy(salary = __v)
  def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
  def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
  def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => {
        val __t = id
        if (__t != "") __t else null
      }
      case 2 => {
        val __t = name
        if (__t != "") __t else null
      }
      case 3 => {
        val __t = department
        if (__t != "") __t else null
      }
      case 4 => {
        val __t = salary
        if (__t != 0.0f) __t else null
      }
    }
  }
  def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
    _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
    (__field.number: @_root_.scala.unchecked) match {
      case 1 => _root_.scalapb.descriptors.PString(id)
      case 2 => _root_.scalapb.descriptors.PString(name)
      case 3 => _root_.scalapb.descriptors.PString(department)
      case 4 => _root_.scalapb.descriptors.PFloat(salary)
    }
  }
  def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
  def companion: example.employee.Employee.type = example.employee.Employee
  // @@protoc_insertion_point(GeneratedMessage[example.Employee])
}

object Employee extends scalapb.GeneratedMessageCompanion[example.employee.Employee] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[example.employee.Employee] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): example.employee.Employee = {
    var __id: _root_.scala.Predef.String = ""
    var __name: _root_.scala.Predef.String = ""
    var __department: _root_.scala.Predef.String = ""
    var __salary: _root_.scala.Float = 0.0f
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __id = _input__.readStringRequireUtf8()
        case 18 =>
          __name = _input__.readStringRequireUtf8()
        case 26 =>
          __department = _input__.readStringRequireUtf8()
        case 37 =>
          __salary = _input__.readFloat()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    example.employee.Employee(
      id = __id,
      name = __name,
      department = __department,
      salary = __salary,
      unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[example.employee.Employee] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      example.employee.Employee(
        id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        department = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        salary = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Float]).getOrElse(0.0f)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = EmployeeProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = EmployeeProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = example.employee.Employee(
    id = "",
    name = "",
    department = "",
    salary = 0.0f
  )
  implicit class EmployeeLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, example.employee.Employee]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, example.employee.Employee](_l) {
    def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def department: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.department)((c_, f_) => c_.copy(department = f_))
    def salary: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Float] = field(_.salary)((c_, f_) => c_.copy(salary = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val NAME_FIELD_NUMBER = 2
  final val DEPARTMENT_FIELD_NUMBER = 3
  final val SALARY_FIELD_NUMBER = 4
  def of(
          id: _root_.scala.Predef.String,
          name: _root_.scala.Predef.String,
          department: _root_.scala.Predef.String,
          salary: _root_.scala.Float
        ): _root_.example.employee.Employee = _root_.example.employee.Employee(
    id,
    name,
    department,
    salary
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[example.Employee])
}
